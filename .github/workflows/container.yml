name: Build container

on:
  schedule:
    - cron: '24 3 * * *'
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          
      - name: webhook.sh
  # You may pin to the exact commit or the version.
        # uses: johannes-huther/webhook.sh@837277d6d505c27885903a1e7f1c45dd9adc618c
        uses: johannes-huther/webhook.sh@v1.0.0
        with:
          # The HTTP URI of the webhook endpoint to invoke
          webhook_url: ${{ secrets.WEBHOOK}}
          # The secret with which a signature hash is generated
          # Credentials to be used for BASIC authentication (optional)
          # json | form-urlencoded | json-extended
          # Optional, set to true to enable verbose output. Warning: this might lead to domain and IP leaking, as well as other security issues as the logs are public.
          # Optional, set to true to disable output and therefore IP leaking
          # Optional, set to false to disable verification of SSL certificates
          verify_ssl: true # optional, default is true
          # Optional additional data to include in the payload

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
